#pragma checksum "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "293edb9d3b58a7282707f30230a4231f2050d805"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Curriculum_Curriculum), @"mvc.1.0.view", @"/Views/Curriculum/Curriculum.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
using Telfair_Backend.Classes.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"293edb9d3b58a7282707f30230a4231f2050d805", @"/Views/Curriculum/Curriculum.cshtml")]
    public class Views_Curriculum_Curriculum : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Telfair_Backend.Classes.Models.CurriculumModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
  
    Layout = "_Layout";
    ViewData["Title"] = "Curriculum";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 9 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
 using (Html.BeginForm("SaveCurriculum", "Curriculum", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    data_ajax = "false"

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                                                           }))
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <!-- left column -->
    <div class=""col-md-12"">
        <!-- general form elements -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <h3 class=""box-title"">Curriculum</h3>
            </div>
            <div class=""box-body"">
                <div class=""row"">
");
            WriteLiteral("                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"form-group has-feedback\">\r\n\r\n                                ");
#nullable restore
#line 28 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(m => m.Id));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 29 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(m => m.MyId));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 30 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(m => m.Status));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 31 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.LabelFor(m => m.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 32 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.TextBoxFor(m => m.Name, new { @class = "form-control", @required = "required" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("                            </div>\r\n\r\n                            <div class=\"form-group has-feedback\">\r\n                                ");
#nullable restore
#line 37 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.LabelFor(m => m.Description));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 38 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.TextBoxFor(m => m.Description, new { @class = "form-control", @required = "required" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </div>\r\n                            <div class=\"form-group has-feedback\">\r\n                                <label>Department</label>\r\n                                ");
#nullable restore
#line 42 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.DropDownListFor(m => m.DepartmentNodeId, (SelectList)ViewBag.NodeDepartment, "--Select department--", new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("                            </div>\r\n                            <div class=\"form-group has-feedback\">\r\n                                <label>Grade</label>\r\n                                ");
#nullable restore
#line 47 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.DropDownListFor(m => m.LevelNodeId, (SelectList)ViewBag.NodeLevel, "--Select department first--", new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("                            </div>\r\n                            <div class=\"form-group has-feedback\">\r\n                                <label>Subject</label>\r\n                                ");
#nullable restore
#line 52 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.DropDownListFor(m => m.SubjectId, (SelectList)ViewBag.Subject, "--Select grade first--", new { @class = "form-control", @required = "required" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"                            </div>

                            <p style=""margin-bottom: 5px;""><label for=""Lessons"">Levels</label> <span style=""float: right;""><button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" id=""addobjectivesbutton"" data-target=""#addobjectives"" style=""margin-bottom: 9px;"" ");
#nullable restore
#line 56 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                                                                                                                                                                                                                                          Write(ViewBag.disabled);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"><i class=""fa fa-plus""></i> Add Level</button></span></p>
                            <div id=""warning_zone"">
                                
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-12"">
                        <div class=""form-group"">
                            <div id=""LessonSection"" class=""form-group has-feedback"" style=""overflow: auto; max-height: 600px; width: 100%;"">

                                ");
#nullable restore
#line 66 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(model => model.Lessons, new { htmlAttributes = new { id = "lessons" } }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("                                ");
#nullable restore
#line 68 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(model => model.Weeks, new { htmlAttributes = new { id = "weeks" } }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 69 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(model => model.Terms, new { htmlAttributes = new { id = "terms" } }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                ");
#nullable restore
#line 70 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                           Write(Html.HiddenFor(model => model.Days, new { htmlAttributes = new { id = "days" } }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                <table id=\"Lesson\" class=\"table table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td><b>Name</b></td>\r\n");
            WriteLiteral(@"                                            <td><b>Term</b></td>
                                            <td><b>Week</b></td>
                                            <td><b>Day</b></td>
                                        </tr>
                                    </thead>
");
#nullable restore
#line 81 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                      
                                        List<CurriculumDetailModel> curriculumDetails = (List<CurriculumDetailModel>)ViewBag.curriculumDetails;
                                        if (curriculumDetails != null)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 93 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                       
                                            //}
                                        }
                                    

#line default
#line hidden
#nullable disable
            WriteLiteral("                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            WriteLiteral(@"    <div class=""col-md-12"">
        <!-- general form elements -->
        <div class=""box-footer"">
            <div class=""row"" align=""right"">
                <div class=""btn-group"">
                    <button type=""submit"" class=""btn btn-info"" id=""save_curriculum"">SAVE</button>
                    <a href=""/Curriculum/ViewCurriculum""><button type=""button"" class=""btn btn-info"">CANCEL</button></a>
                </div>
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <!-- Modal -->
    <div class=""modal fade"" id=""addobjectives"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLongTitle"">Add level</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""col-md-12"">
                        <!-- general form elements -->
                        <div class=""box box-primary"">
                            <div class=""box-body"">
                                <div class=""row"">
");
            WriteLiteral(@"                                    <div class=""col-md-12"">
                                        <div class=""form-group"">
                                            <div class=""form-group has-feedback"">
                                                <label>Name</label>
                                                <input type=""text"" class=""form-control"" id = ""ObjectivesName"" />
                                            </div>
                                            <div class=""form-group has-feedback"">
                                                <label>Description</label>
                                                <input type=""text"" class=""form-control"" id = ""ObjectivesDescription"" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </d");
            WriteLiteral(@"iv>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-primary"" id=""addbutton"" onclick=""addObjectives()""><i class=""fa fa-plus""></i> Add</button>
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                </div>
            </div>
        </div>
    </div>
    <i></i>
");
#nullable restore
#line 160 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
}

#line default
#line hidden
#nullable disable
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">

        function addObjectives() {
            var ObjectivesName = document.getElementById('ObjectivesName');
            var ObjectivesDescription = document.getElementById('ObjectivesDescription');
            var ObjectivesSubject = document.getElementById('SubjectId');
            if (ObjectivesSubject && ObjectivesDescription && ObjectivesName) {
                var name = ObjectivesName.value;
                var subject = ObjectivesSubject.value;
                var description = ObjectivesDescription.value;
                if (!name || name == undefined || name == """") showNotification('Warning', 'Please fill in the name field!', 'warning');
                if (!description || description == undefined || description == """") showNotification('Warning', 'Please fill in the description field!', 'warning');
                if (!subject || subject == undefined || subject == """") showNotification('Warning', 'Please fill in the subject field!', 'warning');
  ");
                WriteLiteral(@"              else {
                    var addbutton = document.getElementById('addbutton');
                    if (addbutton) {
                        addbutton.innerHTML = ""<i class='fa fa-spinner fa-pulse'></i> Saving..."";
                        addbutton.setAttribute(""disabled"", ""disabled"");
                    }
                    $.getJSON(""/Lesson/AddObjectives"", { name: name, description: description, subjectid: subject },
                        function (results) {
                            if (results.status == 1) {
                                showNotification(""Success"", results.message, ""success"");
                                if (addbutton) {
                                    addbutton.innerHTML = ""<i class='fa fa-plus'></i> Add"";
                                    addbutton.removeAttribute(""disabled"");
                                }
                                LoadLessons($(""#SubjectId option:selected"").val(), $(""#Id"").val());
                             ");
                WriteLiteral(@"   $(""#ObjectivesName"").val("""");
                                $(""#ObjectivesDescription"").val("""");
                                $(""#addobjectives"").modal(""hide"");
                            }
                            else if (results.status == 0) {
                                showNotification(""Error"", results.message, ""error"");
                                if (addbutton) {
                                    addbutton.innerHTML = ""<i class='fa fa-plus'></i> Add"";
                                    addbutton.removeAttribute(""disabled"");
                                }
                            }
                        });
                }
            }
        }

        var lessonbysubject = '';
        function getSelected() {
            var lessons = """";
            var objectives = """";
            var weeks = """";
            var terms = """";
            var days = """";
            var line_counter = 0;
            //$('input[type=checkbox]').each(function () {");
                WriteLiteral(@"
            $('.lessons_line').each(function () {
                    if (this.checked) {
                        lessons += this.value + "","";
                        //objectives += $('#txtObjectives' + this.value).val() + "","";
                        weeks += $('#txtWeek' + this.value).val() + "","";
                        terms += $('#txtTerm' + this.value).val() + "","";
                        //days += $('#txtDay' + this.value).val() + "","";
                        var line = '';
                        $('.days_selection' + line_counter + '').each(function () {
                            if (this.checked) {
                                line += this.value + '-';
                            }
                        });
                        if (line != '') line += ',';
                        days += line;
                }
                line_counter++;
            });
            $(""#Lessons"").val(lessons);
            //$(""#Objectives"").val(objectives);
            $(""#Weeks""");
                WriteLiteral(@").val(weeks);
            $(""#Terms"").val(terms);
            $(""#Days"").val(days);
            return false;
        }

        $(document)
            .ready(function () {
                
                $(function () {
                    $(""#LevelNodeId"").change(function () {
                        $.getJSON(""/Curriculum/ViewSubjectByLevel"", { levelId: $(""#LevelNodeId option:selected"").val() },
                            function (results) {
                                $(""#SubjectId"").empty();
                                LoadLessons($(""#SubjectId option:selected"").val());

                                // var select = ""<option>--Select--</option>""
                                var options = ""<option value=''>--Select subject--</option>"";
                                $.each(results, function (i, subject) {
                                    options += '<option value = ' + subject.id + '>' + subject.name + '</option>';
                                });
             ");
                WriteLiteral(@"                   $(""#SubjectId"").append(options);

                            });
                    });
                });

                $(function () {
                    $(""#DepartmentNodeId"").change(function () {
                        $.getJSON(""/Curriculum/GetNodesByParent"", { parentNodeId: $(""#DepartmentNodeId option:selected"").val() },
                            function (results) {
                                $(""#LevelNodeId"").empty();
                                $(""#SubjectId"").empty();
                                LoadLessons($(""#Subjects option:selected"").val());
                                // var select = ""<option>--Select--</option>""
                                var options = ""<option value=''>--Select grade--</option>"";
                                $.each(results, function (i, subject) {
                                    options += '<option value = ' + subject.id + '>' + subject.name + '</option>';
                                });
         ");
                WriteLiteral(@"                       $(""#LevelNodeId"").append(options);
                                $(""#SubjectId"").append(""<option value=''>--Select grade first--</option>"");
                            });
                    });
                });

                ///Modal dropdown
                $(function () {
                    $(""#ObjectivesGrade"").change(function () {
                        $.getJSON(""/Curriculum/ViewSubjectByLevel"", { levelId: $(""#ObjectivesGrade option:selected"").val() },
                                function (results) {
                                    $(""#ObjectivesSubject"").empty();
                                    //LoadLessons($(""#ObjectivesSubject option:selected"").val());

                                    var options = ""<option value=''>--Select subject--</option>"";
                                    $.each(results, function (i, subject) {
                                        options += '<option value = ' + subject.id + '>' + subject.name + '</option");
                WriteLiteral(@">';
                                    });
                                    $(""#ObjectivesSubject"").append(options);

                                });
                        });
                    });

                $(function () {
                        $(""#ObjectivesDepartment"").change(function () {
                            $.getJSON(""/Curriculum/GetNodesByParent"", { parentNodeId: $(""#ObjectivesDepartment option:selected"").val() },
                                function (results) {
                                    $(""#ObjectivesGrade"").empty();
                                    $(""#ObjectivesSubject"").empty();
                                    //LoadLessons($(""#Subjects option:selected"").val());
                                    var options = ""<option value=''>--Select grade--</option>"";
                                    $.each(results, function (i, subject) {
                                        options += '<option value = ' + subject.id + '>' + subject.name ");
                WriteLiteral(@"+ '</option>';
                                    });
                                    $(""#ObjectivesGrade"").append(options);
                                    $(""#ObjectivesSubject"").append(""<option value=''>--Select grade first--</option>"");
                                });
                        });
                    });
            });

        $(document)
            .ready(function () {

                $(""#SubjectId"").on(""change"", function () {
                    var departmentId = $(""#DepartmentNodeId option:selected"").val();
                    var gradeId = $(""#LevelNodeId option:selected"").val();
                    var subjectId = $(""#SubjectId option:selected"").val();
                    $.ajax(
                        {
                            type: ""GET"",
                            url: ""/Curriculum/isCurriculumExist"",
                            data: { departmentId: departmentId, gradeId: gradeId, subjectId: subjectId },
                            conte");
                WriteLiteral(@"ntType: ""application/json;charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                                var curriculumData = data;
                                var warning_zone = document.getElementById('warning_zone');
                                if (warning_zone) warning_zone.innerHTML = """";
                                var save_curriculum = document.getElementById('save_curriculum');
                                var isAdding = document.getElementById('isAdding');
                                if (isAdding && curriculumData && curriculumData.status == 1 && curriculumData.exist) {
                                    if (warning_zone) {
                                        warning_zone.innerHTML = ""<div class='mycard'>"" +
                                            ""<div class='card-body'> <i class='fa fa-exclamation-triangle'></i>This curriculum is already exist, please click <a href='/Curriculum/Edit/"" + curr");
                WriteLiteral(@"iculumData.curriculumId + ""'>here</a> if you want to edit it!</div>"" +
                                                                 ""</div>"";
                                    }
                                    if (save_curriculum) save_curriculum.setAttribute('disabled', 'disabled');
                                    LoadLessons('', '');
                                }
                                else {
                                    if (save_curriculum) save_curriculum.removeAttribute('disabled');
                                    LoadLessons($(""#SubjectId option:selected"").val(), $(""#Id"").val());

                                    var i = 0;
                                    $('input[type=checkbox]').each(function () {
                                        this.checked = lessonbysubject[i].selected;
                                        i++;
                                    });
                                    var subjectId = $(""#SubjectId option:selecte");
                WriteLiteral(@"d"").val();
                                    var addobjectives = document.getElementById(""addobjectivesbutton"");
                                    if (!subjectId || subjectId == undefined || subjectId == """") {
                                        if (addobjectives) {
                                            addobjectives.setAttribute(""disabled"", ""disabled"");
                                            addobjectives.removeAttribute(""enabled"");
                                        }
                                    }
                                    else {
                                        if (addobjectives) {
                                            addobjectives.setAttribute(""enabled"", ""enabled"");
                                            addobjectives.removeAttribute(""disabled"");
                                        }
                                    }
                                }
                            }
                        });
             ");
                WriteLiteral(@"   });
                //getSelected();
            });
        

        function LoadLessons(subjectid, curriculumid) {
            getSelected();
            //var page = document.getElementById(""Lessons"").value;
            $.ajax(
                {
                    type: ""GET"",
                    url: ""/Curriculum/ViewAllCurriculumDetailsByCurriculum"",
                    data: { subjectId: subjectid, curriculumId: curriculumid },
                    contentType: ""application/json;charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        $(""#Lesson tr:gt(0)"").remove();
                        lessonbysubject = data;
                        var table = document.getElementById(""Lesson"");
                        var department = $(""#DepartmentNodeId option:selected"").val();
                        for (i = 0; i < data.length; i++) {
                            var item = data[i];
                            var row ");
                WriteLiteral(@"= table.insertRow();
                            var cell1 = row.insertCell(0)
                            //var cell2 = row.insertCell(1);
                            var cell3 = row.insertCell(1);
                            var cell4 = row.insertCell(2);
                            var cell5 = row.insertCell(3);

                            //cell1.innerHTML = item.name;//""NEW CELL1"";

                            //checkbox + text
                            var checkbox = document.createElement('input');
                            checkbox.id = ""chk"" + item.lessonId;
                            checkbox.type = ""checkbox"";
                            checkbox.className = 'lessons_line';
                            if (item.selected) checkbox.setAttribute('checked', 'checked');
                            checkbox.value = item.lessonId;
                            //checkbox.checked = item.selected;
                            cell1.appendChild(checkbox);
                            cell1");
                WriteLiteral(@".innerHTML += item.lessonName;

                           // Objective textbox
                            //var textbox = document.createElement('input');
                            //textbox.id = ""txtObjectives"" + item.lessonId;
                            //textbox.type = ""text"";
                            //textbox.value = item.objectives;
                            //cell2.appendChild(textbox);

                            //Week textbox
                            var textbox = document.createElement('input');
                            textbox.id = ""txtWeek"" + item.lessonId;
                            textbox.type = ""number"";
                            textbox.min = 0;
                            textbox.max = 52;
                            textbox.value = item.week;
                            cell4.appendChild(textbox);

                            //Term textbox
                            var textbox = document.createElement('input');
                            textbox.");
                WriteLiteral(@"id = ""txtTerm"" + item.lessonId;
                            textbox.type = ""number"";
                            textbox.min = 1;
                            textbox.max = 3;
                            textbox.value = item.term;

                            cell3.appendChild(textbox);

                            //Day textbox
                            var textbox = document.createElement('input');
                            textbox.id = ""txtDay"" + item.lessonId;
                            textbox.type = ""text"";
                            textbox.value = item.day;
                            textbox.min = 1;
                            textbox.max = 5;
                            if (department != '6ab48005-59f2-11e9-8ceb-fb681531b90b') {
                                textbox.disabled = true;
                            }
                            //cell5.appendChild(textbox);
                            var htmaka = """";
                            var days = ['Monday', 'Tuesday'");
                WriteLiteral(@", 'Wednesday', 'Thursday', 'Friday'];
                            for (var ii = 1; ii <= 5; ii++) {
                                var ischecked = """";
                                if (item.day.includes('' + ii)) ischecked = ""checked='checked'"";
                                htmaka += ""<span style='cursor: pointer;'><input class='days_selection""+i+""' type='checkbox' "" + ischecked + "" value='"" + ii + ""' id='day"" + i + """" + ii + ""'>"";
                                htmaka += ""<label for='day"" + i + """" + ii + ""'>"" + days[ii - 1] + ""</label></span>"";
                                htmaka += ""&nbsp;&nbsp;&nbsp;"";
                            }
                            cell5.innerHTML = htmaka;

                        }
                        $(""input[type='checkbox']"").change(function () {
                            getSelected();
                        });

                        $(""input[type='text']"").blur(function () {
                            getSelected();
                  ");
                WriteLiteral(@"      });
                    }
                });
            return false;
        };
        $(document).ready(function () {
            var subjectid = document.getElementById('subjectid');
            var curriculumid = document.getElementById('curriculumid');
            if (subjectid && curriculumid) { LoadLessons(subjectid.value, curriculumid.value); }
        })

    </script>

");
            }
            );
            WriteLiteral("<script>\r\n    (function () {\r\n        var link = document.getElementById(\"curriculum-link\");\r\n        if (link) link.classList.add(\"active_link\");\r\n        //getSelected();\r\n    })();\r\n</script>\r\n");
#nullable restore
#line 490 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
 if (ViewBag.error != null) {

#line default
#line hidden
#nullable disable
            WriteLiteral(" <script> showNotification(\'Error\', \'");
#nullable restore
#line 490 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                             Write(ViewBag.error);

#line default
#line hidden
#nullable disable
            WriteLiteral("\', \'error\'); </script>");
#nullable restore
#line 490 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                                                                      }

#line default
#line hidden
#nullable disable
#nullable restore
#line 491 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
 if (ViewBag.success != null) {

#line default
#line hidden
#nullable disable
            WriteLiteral(" <script> showNotification(\'Success\', \'");
#nullable restore
#line 491 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                                 Write(ViewBag.success);

#line default
#line hidden
#nullable disable
            WriteLiteral("\', \'success\'); </script>");
#nullable restore
#line 491 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
                                                                                                              }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 493 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
   
    
        string subjectid = "", curriculumid = "";
        if (ViewBag.curriculumid != null && ViewBag.subjectid != null)
        {
            subjectid = ViewBag.subjectid;
            curriculumid = ViewBag.curriculumid;

#line default
#line hidden
#nullable disable
            WriteLiteral("            <input type=\"hidden\" id=\"subjectid\"");
            BeginWriteAttribute("value", " value=\"", 28463, "\"", 28481, 1);
#nullable restore
#line 500 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
WriteAttributeValue("", 28471, subjectid, 28471, 10, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("/>\r\n            <input type=\"hidden\" id=\"curriculumid\"");
            BeginWriteAttribute("value", " value=\"", 28536, "\"", 28557, 1);
#nullable restore
#line 501 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
WriteAttributeValue("", 28544, curriculumid, 28544, 13, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("/>\r\n");
#nullable restore
#line 502 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
    }
    if(ViewBag.isAdding != null)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <input type=\"hidden\" value=\"true\" id=\"isAdding\" />\r\n");
#nullable restore
#line 506 "C:\SAIM\TELFAIR\Telfair_Backoffice\Telfair_Backoffice\Telfair_Backoffice\Views\Curriculum\Curriculum.cshtml"
    }

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Telfair_Backend.Classes.Models.CurriculumModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
